---
- name: write disable-transparent-hugepages script
  copy:
    src: disable-transparent-hugepages
    dest: /etc/init.d/disable-transparent-hugepages
    owner: root
    group: root
    mode: 0755
  notify:
    - reload systemd

- name: start disable-transparent-hugepages service
  service:
    name: disable-transparent-hugepages
    state: started
    enabled: yes

- name: install mongodb package
  package:
    name: mongodb-org
    state: present

- name: ensure data directory
  file:
    state: directory
    path: "{{ mongodb_config.storage.dbPath }}"
    owner: "{{ mongodb_user }}"
    group: "{{ mongodb_group }}"

- name: ensure log directory
  file:
    state: directory
    path: "{{ mongodb_config.systemLog.path | dirname }}"
    owner: "{{ mongodb_user }}"
    group: "{{ mongodb_group }}"
  when: mongodb_config.systemLog.path is defined

- name: write logrotate config
  template:
    src: "{{ mongodb_logrotate_template }}"
    dest: /etc/logrotate.d/mongod
    owner: root
    group: root
    mode: 0644
  when: mongodb_logrotate_enabled and mongodb_logrotate_config
        and mongodb_config.systemLog.path is defined and mongodb_config.systemLog.path
        and mongodb_config.systemLog.destination is defined and mongodb_config.systemLog.destination|lower == 'file'

- name: write config file
  template:
    src: "{{ mongodb_config_template }}"
    dest: "{{ mongodb_config_file }}"
    owner: root
    group: root
    mode: 0644
  notify:
    - restart mongodb

- name: ensure keyFile directory
  file:
    state: directory
    path: "{{ mongodb_config.security.keyFile | dirname }}"
  when: mongodb_keyfile_content
        and mongodb_config.security.keyFile is defined
        and mongodb_config.security.keyFile

- name: create keyFile
  copy:
    dest: "{{ mongodb_config.security.keyFile }}"
    content: "{{ mongodb_keyfile_content }}"
    owner: "{{ mongodb_user }}"
    group: "{{ mongodb_group }}"
    mode: 0600
  when: mongodb_keyfile_content
        and mongodb_config.security.keyFile is defined
        and mongodb_config.security.keyFile
  notify:
    - restart mongodb

- name: manage mongod service
  service:
    name: mongod
    state: "{{ mongodb_enable_service | bool | ternary('started', 'stopped') }}"
    enabled: "{{ mongodb_enable_service }}"

- name: install pymongo package
  package:
    name: python-pymongo
    state: present
  when: mongodb_pymongo_install_method == 'package'

- name: install pip
  package:
    name: python-pip
    state: present
  when: mongodb_pymongo_install_method == 'pip'

- name: pip install pymongo
  pip:
    name: pymongo
    state: present
  when: mongodb_pymongo_install_method == 'pip'
